/// Base class for all all client-side exceptions that can be generated by the app
sealed class AppException implements Exception {
  AppException({
    this.error,
    this.additionalData = '',
    this.stackTrace,
  });

  /// additional data for logging to tracker
  final String additionalData;

  final Object? error;

  StackTrace? stackTrace;

  StackTrace defaultStackTrace = StackTrace.current;
}

class HttpException extends AppException {
  HttpException({
    required super.error,
    required super.stackTrace,
  });
}

class ConnectivityCheckException extends AppException {
  ConnectivityCheckException({
    required super.error,
    required super.stackTrace,
  });
}

class DatabaseException extends AppException {
  DatabaseException({
    required super.error,
    required super.stackTrace,
  });
}

class RequestException extends AppException {
  RequestException({
    required this.statusCode,
    this.reason,
    this.body,
  }) : super(
          additionalData: 'reason: $reason, body: $body',
        );

  String? reason;
  String? body;
  final int statusCode;
}

class JsonDecodeException extends AppException {
  JsonDecodeException({
    required super.error,
    this.body,
  }) : super(
          additionalData: 'response body: $body',
        );

  String? body;
}

class InvalidMapException extends AppException {
  InvalidMapException({
    required this.decodedJson,
  }) : super(
          additionalData: 'response body: $decodedJson',
        );

  final dynamic decodedJson;
}

class JsonToDtoException extends AppException {
  JsonToDtoException({
    required super.error,
    required super.stackTrace,
  });
}
